"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./store/user/moods.tsx":
/*!******************************!*\
  !*** ./store/user/moods.tsx ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUserMoods: function() { return /* binding */ getUserMoods; },\n/* harmony export */   selectedDayVar: function() { return /* binding */ selectedDayVar; },\n/* harmony export */   updateUserMoods: function() { return /* binding */ updateUserMoods; },\n/* harmony export */   userMoodsVar: function() { return /* binding */ userMoodsVar; }\n/* harmony export */ });\n/* harmony import */ var _helpers_dates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/helpers/dates */ \"(app-pages-browser)/./helpers/dates.tsx\");\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @apollo/client */ \"(app-pages-browser)/./node_modules/@apollo/client/cache/inmemory/reactiveVars.js\");\n/* harmony import */ var _barrel_optimize_names_formatDate_date_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=formatDate!=!date-fns */ \"(app-pages-browser)/./node_modules/date-fns/format.mjs\");\n\n\n\nconst userMoodsVar = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.makeVar)([]);\nconst selectedDayVar = (0,_apollo_client__WEBPACK_IMPORTED_MODULE_1__.makeVar)(null);\n//Typically, on app load we would look for some auth token in cookies\n//If the token is not present, we would redirect the user to the login page\n//If the token is present, we would fetch the user data and pass the token to the endpoint\nconst getUserMoods = async ()=>{\n    // const res = await fetch(`https://api.example.com/user-data`);\n    // return res.json();\n    if (true) {\n        const today = (0,_barrel_optimize_names_formatDate_date_fns__WEBPACK_IMPORTED_MODULE_2__.formatDate)(new Date(), \"yyyy-MM-dd\");\n        let moodData = [];\n        //This would typically be our api call to get the user's mood data\n        const storedMoodData = localStorage.getItem(\"userMoods\");\n        if (storedMoodData) {\n            //response.data\n            moodData = JSON.parse(storedMoodData);\n        } else {\n            //Just so we can have some data to work with if there is no local storage\n            const adjustedWeekDates = (0,_helpers_dates__WEBPACK_IMPORTED_MODULE_0__.getWeekNumberDates)().map((date)=>{\n                //LOCAL STORAGE USES LOCAL TIMEZONE - SUN TO MON\n                //SO WE NEED TO ADJUST THE DATES\n                const timezoneOffset = date.getTimezoneOffset() * 60 * 1000;\n                return new Date(date.getTime() - timezoneOffset);\n            });\n            const initialMoodData = adjustedWeekDates.map((date)=>({\n                    mood: null,\n                    date,\n                    comment: null,\n                    weather: null\n                }));\n            localStorage.setItem(\"userMoods\", JSON.stringify(initialMoodData));\n            moodData = initialMoodData;\n        }\n        userMoodsVar(moodData);\n        const todaysMood = storedMoodData && JSON.parse(storedMoodData).find((mood)=>(0,_barrel_optimize_names_formatDate_date_fns__WEBPACK_IMPORTED_MODULE_2__.formatDate)(mood.date, \"yyyy-MM-dd\") === today);\n        console.log(todaysMood);\n        selectedDayVar(todaysMood || undefined);\n    }\n};\nconst updateUserMoods = (mood)=>{\n// const res = await fetch(`https://api.example.com/user-data`);\n// return res.json();\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3N0b3JlL3VzZXIvbW9vZHMudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBcUQ7QUFFWjtBQUNIO0FBRS9CLE1BQU1HLGVBQWVGLHVEQUFPQSxDQUFTLEVBQUUsRUFBRTtBQUN6QyxNQUFNRyxpQkFBaUJILHVEQUFPQSxDQUFjLE1BQU07QUFDekQscUVBQXFFO0FBQ3JFLDJFQUEyRTtBQUMzRSwwRkFBMEY7QUFFbkYsTUFBTUksZUFBZTtJQUMxQixnRUFBZ0U7SUFDaEUscUJBQXFCO0lBQ3JCLElBQUksSUFBNkIsRUFBRTtRQUNqQyxNQUFNQyxRQUFRSixzRkFBVUEsQ0FBQyxJQUFJSyxRQUFRO1FBQ3JDLElBQUlDLFdBQW1CLEVBQUU7UUFDekIsa0VBQWtFO1FBQ2xFLE1BQU1DLGlCQUFpQkMsYUFBYUMsT0FBTyxDQUFDO1FBQzVDLElBQUlGLGdCQUFnQjtZQUNsQixlQUFlO1lBQ2ZELFdBQVdJLEtBQUtDLEtBQUssQ0FBQ0o7UUFDeEIsT0FBTztZQUNMLHlFQUF5RTtZQUN6RSxNQUFNSyxvQkFBb0JkLGtFQUFrQkEsR0FBR2UsR0FBRyxDQUFDLENBQUNDO2dCQUNsRCxnREFBZ0Q7Z0JBQ2hELGdDQUFnQztnQkFDaEMsTUFBTUMsaUJBQWlCRCxLQUFLRSxpQkFBaUIsS0FBSyxLQUFLO2dCQUN2RCxPQUFPLElBQUlYLEtBQUtTLEtBQUtHLE9BQU8sS0FBS0Y7WUFDbkM7WUFDQSxNQUFNRyxrQkFBMEJOLGtCQUFrQkMsR0FBRyxDQUFDLENBQUNDLE9BQVU7b0JBQy9ESyxNQUFNO29CQUNOTDtvQkFDQU0sU0FBUztvQkFDVEMsU0FBUztnQkFDWDtZQUNBYixhQUFhYyxPQUFPLENBQUMsYUFBYVosS0FBS2EsU0FBUyxDQUFDTDtZQUNqRFosV0FBV1k7UUFDYjtRQUVBakIsYUFBYUs7UUFDYixNQUFNa0IsYUFDSmpCLGtCQUNBRyxLQUFLQyxLQUFLLENBQUNKLGdCQUFnQmtCLElBQUksQ0FDN0IsQ0FBQ04sT0FBZW5CLHNGQUFVQSxDQUFDbUIsS0FBS0wsSUFBSSxFQUFFLGtCQUFrQlY7UUFFNURzQixRQUFRQyxHQUFHLENBQUNIO1FBQ1p0QixlQUFlc0IsY0FBY0k7SUFDL0I7QUFDRixFQUFFO0FBRUssTUFBTUMsa0JBQWtCLENBQUNWO0FBQzlCLGdFQUFnRTtBQUNoRSxxQkFBcUI7QUFDdkIsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zdG9yZS91c2VyL21vb2RzLnRzeD8wYjMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFdlZWtOdW1iZXJEYXRlcyB9IGZyb20gXCJAL2hlbHBlcnMvZGF0ZXNcIjtcbmltcG9ydCB7IE1vb2QgfSBmcm9tIFwiQC90eXBlcy91c2VyLXR5cGVzXCI7XG5pbXBvcnQgeyBtYWtlVmFyIH0gZnJvbSBcIkBhcG9sbG8vY2xpZW50XCI7XG5pbXBvcnQgeyBmb3JtYXREYXRlIH0gZnJvbSBcImRhdGUtZm5zXCI7XG5cbmV4cG9ydCBjb25zdCB1c2VyTW9vZHNWYXIgPSBtYWtlVmFyPE1vb2RbXT4oW10pO1xuZXhwb3J0IGNvbnN0IHNlbGVjdGVkRGF5VmFyID0gbWFrZVZhcjxNb29kIHwgbnVsbD4obnVsbCk7XG4vL1R5cGljYWxseSwgb24gYXBwIGxvYWQgd2Ugd291bGQgbG9vayBmb3Igc29tZSBhdXRoIHRva2VuIGluIGNvb2tpZXNcbi8vSWYgdGhlIHRva2VuIGlzIG5vdCBwcmVzZW50LCB3ZSB3b3VsZCByZWRpcmVjdCB0aGUgdXNlciB0byB0aGUgbG9naW4gcGFnZVxuLy9JZiB0aGUgdG9rZW4gaXMgcHJlc2VudCwgd2Ugd291bGQgZmV0Y2ggdGhlIHVzZXIgZGF0YSBhbmQgcGFzcyB0aGUgdG9rZW4gdG8gdGhlIGVuZHBvaW50XG5cbmV4cG9ydCBjb25zdCBnZXRVc2VyTW9vZHMgPSBhc3luYyAoKSA9PiB7XG4gIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS5leGFtcGxlLmNvbS91c2VyLWRhdGFgKTtcbiAgLy8gcmV0dXJuIHJlcy5qc29uKCk7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY29uc3QgdG9kYXkgPSBmb3JtYXREYXRlKG5ldyBEYXRlKCksIFwieXl5eS1NTS1kZFwiKTtcbiAgICBsZXQgbW9vZERhdGE6IE1vb2RbXSA9IFtdO1xuICAgIC8vVGhpcyB3b3VsZCB0eXBpY2FsbHkgYmUgb3VyIGFwaSBjYWxsIHRvIGdldCB0aGUgdXNlcidzIG1vb2QgZGF0YVxuICAgIGNvbnN0IHN0b3JlZE1vb2REYXRhID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ1c2VyTW9vZHNcIik7XG4gICAgaWYgKHN0b3JlZE1vb2REYXRhKSB7XG4gICAgICAvL3Jlc3BvbnNlLmRhdGFcbiAgICAgIG1vb2REYXRhID0gSlNPTi5wYXJzZShzdG9yZWRNb29kRGF0YSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vSnVzdCBzbyB3ZSBjYW4gaGF2ZSBzb21lIGRhdGEgdG8gd29yayB3aXRoIGlmIHRoZXJlIGlzIG5vIGxvY2FsIHN0b3JhZ2VcbiAgICAgIGNvbnN0IGFkanVzdGVkV2Vla0RhdGVzID0gZ2V0V2Vla051bWJlckRhdGVzKCkubWFwKChkYXRlKSA9PiB7XG4gICAgICAgIC8vTE9DQUwgU1RPUkFHRSBVU0VTIExPQ0FMIFRJTUVaT05FIC0gU1VOIFRPIE1PTlxuICAgICAgICAvL1NPIFdFIE5FRUQgVE8gQURKVVNUIFRIRSBEQVRFU1xuICAgICAgICBjb25zdCB0aW1lem9uZU9mZnNldCA9IGRhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKSAqIDYwICogMTAwMDtcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKGRhdGUuZ2V0VGltZSgpIC0gdGltZXpvbmVPZmZzZXQpO1xuICAgICAgfSk7XG4gICAgICBjb25zdCBpbml0aWFsTW9vZERhdGE6IE1vb2RbXSA9IGFkanVzdGVkV2Vla0RhdGVzLm1hcCgoZGF0ZSkgPT4gKHtcbiAgICAgICAgbW9vZDogbnVsbCxcbiAgICAgICAgZGF0ZSxcbiAgICAgICAgY29tbWVudDogbnVsbCxcbiAgICAgICAgd2VhdGhlcjogbnVsbCxcbiAgICAgIH0pKTtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidXNlck1vb2RzXCIsIEpTT04uc3RyaW5naWZ5KGluaXRpYWxNb29kRGF0YSkpO1xuICAgICAgbW9vZERhdGEgPSBpbml0aWFsTW9vZERhdGE7XG4gICAgfVxuXG4gICAgdXNlck1vb2RzVmFyKG1vb2REYXRhKTtcbiAgICBjb25zdCB0b2RheXNNb29kID1cbiAgICAgIHN0b3JlZE1vb2REYXRhICYmXG4gICAgICBKU09OLnBhcnNlKHN0b3JlZE1vb2REYXRhKS5maW5kKFxuICAgICAgICAobW9vZDogTW9vZCkgPT4gZm9ybWF0RGF0ZShtb29kLmRhdGUsIFwieXl5eS1NTS1kZFwiKSA9PT0gdG9kYXlcbiAgICAgICk7XG4gICAgY29uc29sZS5sb2codG9kYXlzTW9vZCk7XG4gICAgc2VsZWN0ZWREYXlWYXIodG9kYXlzTW9vZCB8fCB1bmRlZmluZWQpO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgdXBkYXRlVXNlck1vb2RzID0gKG1vb2Q6IE1vb2QpID0+IHtcbiAgLy8gY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLmV4YW1wbGUuY29tL3VzZXItZGF0YWApO1xuICAvLyByZXR1cm4gcmVzLmpzb24oKTtcbn07XG4iXSwibmFtZXMiOlsiZ2V0V2Vla051bWJlckRhdGVzIiwibWFrZVZhciIsImZvcm1hdERhdGUiLCJ1c2VyTW9vZHNWYXIiLCJzZWxlY3RlZERheVZhciIsImdldFVzZXJNb29kcyIsInRvZGF5IiwiRGF0ZSIsIm1vb2REYXRhIiwic3RvcmVkTW9vZERhdGEiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiSlNPTiIsInBhcnNlIiwiYWRqdXN0ZWRXZWVrRGF0ZXMiLCJtYXAiLCJkYXRlIiwidGltZXpvbmVPZmZzZXQiLCJnZXRUaW1lem9uZU9mZnNldCIsImdldFRpbWUiLCJpbml0aWFsTW9vZERhdGEiLCJtb29kIiwiY29tbWVudCIsIndlYXRoZXIiLCJzZXRJdGVtIiwic3RyaW5naWZ5IiwidG9kYXlzTW9vZCIsImZpbmQiLCJjb25zb2xlIiwibG9nIiwidW5kZWZpbmVkIiwidXBkYXRlVXNlck1vb2RzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./store/user/moods.tsx\n"));

/***/ })

});